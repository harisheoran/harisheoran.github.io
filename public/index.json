[{"content":" View Resume Domain Skills/Tools Projects Cloud AWS Deployed a Web app on AWS EC2 Hosted an Static website on S3 Infrastructure as Code Terraform Created AWS EC2 instance with security groups for a web app deployment Containerization Docker Multi-Stage Docker Build of GO web server Containerized an Node JS \u0026amp; Mongo DB web app Configuration Management Ansible Install Jenkins on EC2 and configure the web app on EC2 CI Jenkins, Github Actions Create Docker image \u0026amp; push to Docker Hub registry Programming Languages Java, GO, Kotlin SCM Github, Gitlab Github Profile ","date":"28 December 2023","permalink":"/resume/","section":"","summary":" View Resume Domain Skills/Tools Projects Cloud AWS Deployed a Web app on AWS EC2 Hosted an Static website on S3 Infrastructure as Code Terraform Created AWS EC2 instance with security groups for a web app deployment Containerization Docker Multi-Stage Docker Build of GO web server Containerized an Node JS \u0026amp; Mongo DB web app Configuration Management Ansible Install Jenkins on EC2 and configure the web app on EC2 CI Jenkins, Github Actions Create Docker image \u0026amp; push to Docker Hub registry Programming Languages Java, GO, Kotlin SCM Github, Gitlab Github Profile ","title":""},{"content":"","date":"21 December 2023","permalink":"/","section":"","summary":"","title":""},{"content":"","date":"21 December 2023","permalink":"/projects/","section":"","summary":"","title":""},{"content":"","date":"21 December 2023","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"21 December 2023","permalink":"/categories/devops/","section":"Categories","summary":"","title":"DevOps"},{"content":"","date":"21 December 2023","permalink":"/tags/distroless-image/","section":"Tags","summary":"","title":"Distroless Image"},{"content":"","date":"21 December 2023","permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker"},{"content":"","date":"21 December 2023","permalink":"/tags/go/","section":"Tags","summary":"","title":"GO"},{"content":"Simple Web Server in GO # Containerization using Multi-Stage Docker Build # Multi-Stage Docker Build or Distroless Image is a concept of creating image in multiple stages.\nWe build a docker image of a simple go web server using the concept of multi-stage docker build. The Evolution: From 815MB to 6.71MB üöÄ # A simple Go web server docker image is 815 MB which is quite large.\nEnter the magic of multi-stage Docker builds. By breaking down the build process into distinct stages, we\u0026rsquo;ve successfully trimmed down our image to a sleek 6.71MB. That\u0026rsquo;s a jaw-dropping 99.17% reduction in size, making our deployment faster, more scalable, and resource-efficient. How do we build the image? We divide this image into 2 stages,\nBuild Stage Production Stage Build Stage # In this stage, we take golang as Base image and install all the dependencies it needs and create a single binary and we don\u0026rsquo;t need to define our entrypoint here.\nFROM golang:1.21 as build WORKDIR /app COPY go.mod ./ RUN go mod download COPY *.go ./ RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main . Production Stage # In this stage we take scratch as Base image, it is a bare minimum image to run our binary.\nCopy the binary build from build stage and execute it as an entrypoint.\nWe don\u0026rsquo;t need golang image in our production, we only need the executable binary.\nFROM scratch COPY --from=build /app/main . EXPOSE 3000 CMD [ \u0026#34;./main\u0026#34; ] The Command That Did the Magic ‚ú® # Build the executable binary.\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main . Breaking down the command:\nCGO_ENABLED=0: Disabling CGO for a statically linked binary. GOOS=linux: Targeting a Linux operating system for compatibility. go build -a -installsuffix cgo -o main .: Building a binary optimized for minimal size. Benefits Beyond Size: Security Boost üõ°Ô∏è # Reducing image size isn\u0026rsquo;t just about efficiency ‚Äì it\u0026rsquo;s also about security. Our final image contains only the essentials needed to run the Go application, minimizing attack surfaces and potential vulnerabilities. With fewer dependencies and a smaller footprint, our web server is now more resilient and secure in a production environment.\nSource Code # harisheoran/Multi-stage-docker-build-GO-web-server Multi Stage Docker Build or Distroless Image of a simple GO web server. Go 0 0 ","date":"21 December 2023","permalink":"/projects/multi_stage_docker_go/","section":"","summary":"Simple Web Server in GO # Containerization using Multi-Stage Docker Build # Multi-Stage Docker Build or Distroless Image is a concept of creating image in multiple stages.","title":"Multi-Stage Docker Build of GO web server"},{"content":"","date":"21 December 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"20 November 2023","permalink":"/tags/ansible/","section":"Tags","summary":"","title":"Ansible"},{"content":"","date":"20 November 2023","permalink":"/tags/aws/","section":"Tags","summary":"","title":"AWS"},{"content":"","date":"20 November 2023","permalink":"/tags/docker-compose/","section":"Tags","summary":"","title":"Docker-Compose"},{"content":"","date":"20 November 2023","permalink":"/tags/dynamo-db/","section":"Tags","summary":"","title":"Dynamo DB"},{"content":"","date":"20 November 2023","permalink":"/tags/ec2/","section":"Tags","summary":"","title":"EC2"},{"content":"Programmer Server # Micro Blog website for developers.\nSource Code # harisheoran/programmer-server Micro Blog website for developers. EJS 0 0 Workflow # Demo # Tech Stack and tools # Application # Node JS Express JS Mongo DB Bootstrap 5 DevOps # Docker Docker Compose VCS (Git \u0026amp; Github) Terraform Ansible Nginx AWS EC2 Jenkins Next Goals # Contianer Orchestration using k8s Website Setup # Prerequisite # Install \u0026amp; Configure AWS CLI\nInstall Docker and start its service\nInstall Terraform \u0026amp; Ansible\nCreate two env files\n.env NODE_ENV=prod MONGO_USER= MONGO_PASSWORD= SESSION_SECRET= .env2 MONGO_INITDB_ROOT_USERNAME= MONGO_INITDB_ROOT_PASSWORD= Inventory file Development Setup # How to run the project locally # Install npm packages npm install Build the Docker image and run the container # sudo docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d You can access the application on localhost:3000 and hit the /blogserver .\nProduction Setup # Infrastructure as Code # Run the Terrafrom File to launch 2 ec2 instances # cd terraform terraform init terraform apply It\u0026rsquo;ll output 2 IP addresses, copy them(You\u0026rsquo;ll need to configure our ec2 instances).\nConfiguration Management # For Pipeline # Using Ansible\nFirst, we configure the Pipeline server cd ansible Paste the IP address in inventory.ini\nansible-playbook -i ./inventory.ini ./pipeline.yml It\u0026rsquo;ll install Jenkins on EC2 and start serving on port 8080.\nNow install basic plugins and some additional plugins like\nGithub Integration For main server # Now, configure the main ec2 instance, execute the following command\nansible-playbook -i ./inventory.ini ./run_app.yml Web application will start serving at public ip address of ec2 instance.\nCI Setup # After creating EC2 instance, copy the IP address of ec2 instance to inventory.ini file (in ansible directory)\n[pipeline] \u0026lt;paste ip address here\u0026gt; ansible_ssh_private_key_file=/home/harisheoran/my-key.pem ansible_user=ubuntu Set your path of ansible_ssh_private_key (your aws key pair value file)\n","date":"20 November 2023","permalink":"/projects/end_to_end_devops_project/","section":"","summary":"Programmer Server # Micro Blog website for developers.","title":"End to End DevOps Project"},{"content":"","date":"20 November 2023","permalink":"/tags/jenkins/","section":"Tags","summary":"","title":"Jenkins"},{"content":"","date":"20 November 2023","permalink":"/tags/s3/","section":"Tags","summary":"","title":"S3"},{"content":"","date":"20 November 2023","permalink":"/tags/terraform/","section":"Tags","summary":"","title":"Terraform"},{"content":"Containerization of a simple Node JS application using Docker and Docker Compose.\nIn this project, I have worked on\nContainerization using Docker Dockerfile Building Docker Images Running container from the image. Volumes and Bind Mount Anonymous Volumes \u0026amp; Read Only volumes Envrionment variables of app Docker Compose Development \u0026amp; Production Dockerfiles Use of Bash Script Github Action to push the image on Docker Hub Registry Read the full detailed article on my blog. # Project Workflow # Docker Image on Docker Hub # harisheoran/my-node-app\nGithub Repository # harisheoran/nodejs-docker Containerization of Node JS web app. JavaScript 0 0 ","date":"15 November 2023","permalink":"/projects/nodejs_docker/","section":"","summary":"Containerization of a simple Node JS application using Docker and Docker Compose.","title":"Containerization of NodeJS app"},{"content":" I\u0026rsquo;m Harish, a DevOps Engineer with a deep-rooted commitment to enhancing software development and deployment practices. My daily toolkit comprises AWS, Docker, Ansible, Terraform, and Jenkins, allowing me to orchestrate and automate the software delivery pipeline efficiently. Linux serves as the foundation of my daily operations in the DevOps realm, offering robust stability and flexibility. Additionally, I\u0026rsquo;m well-versed in vital tools like Git, GitHub, Vim, and shell scripting.\nBefore embracing the DevOps path, I excelled as a Native Android Developer. My skill set encompassed Kotlin, Jetpack libraries, Jetpack Compose, XML, Retrofit, and Dependency Injection with Hilt. My tech journey initiated with web development, providing me with a holistic perspective on software engineering.\nI approach each project with a continuous learning mindset and a genuine passion for tackling intricate technical challenges. Let\u0026rsquo;s collaborate to drive your technology initiatives forward, leveraging the right tools for the job.\nDeveloper Profile # Github Profile\nDon\u0026rsquo;t forget to connect with me on Twitter. üõ† Technology and tools # \u003c!DOCTYPE html\u003e HTML 5 Boilerplate Journey # Gallery Tech Events \u0026amp; Meetup Smart India Hackathon: Inter College October 2023 During my academic journey, I actively engaged in the Smart India Hackathon, where I led Team Sparrow Bit to secure an impressive 4th position in our university‚Äôs internal hackathon competition. Our endeavor revolved around addressing a pressing issue through innovation and technology. The challenge we tackled was the complexity of legal documentation, which often poses a formidable obstacle for individuals and small businesses in India. With determination and technical prowess, we crafted a groundbreaking AI-powered solution that streamlined the legal documentation process. By harnessing Large Language Models (LLMs) and advanced Natural Language Processing (NLP) techniques, our solution simplified convoluted legal language, enabled customizable document generation, and provided multilingual accessibility. BuildSpace August - September 2023 Build a A.I. powered Slack Bot ","date":"11 November 2023","permalink":"/about/","section":"","summary":"I\u0026rsquo;m Harish, a DevOps Engineer with a deep-rooted commitment to enhancing software development and deployment practices.","title":"About"},{"content":"Deploy a static website on AWS S3 using Terraform.\nGithub Repository # harisheoran/memesofthday-terraform HTML 0 1 Demo # Main Terraform file # # create a S3 bucket resource \u0026#34;aws_s3_bucket\u0026#34; \u0026#34;mybucket\u0026#34; { bucket = var.bucketName } # bucket ownership resource \u0026#34;aws_s3_bucket_ownership_controls\u0026#34; \u0026#34;myownershipcontrols\u0026#34; { bucket = aws_s3_bucket.mybucket.id rule { object_ownership = \u0026#34;BucketOwnerPreferred\u0026#34; } } # make S3 access public so that anyone can access it resource \u0026#34;aws_s3_bucket_public_access_block\u0026#34; \u0026#34;mypublicaccess\u0026#34; { bucket = aws_s3_bucket.mybucket.id block_public_acls = false block_public_policy = false ignore_public_acls = false restrict_public_buckets = false } # access control list resource \u0026#34;aws_s3_bucket_acl\u0026#34; \u0026#34;myacl\u0026#34; { depends_on = [ aws_s3_bucket_ownership_controls.myownershipcontrols, aws_s3_bucket_public_access_block.mypublicaccess, ] bucket = aws_s3_bucket.mybucket.id acl = \u0026#34;public-read\u0026#34; } # index.html resource \u0026#34;aws_s3_object\u0026#34; \u0026#34;index\u0026#34; { bucket = aws_s3_bucket.mybucket.id key = \u0026#34;index.html\u0026#34; source = \u0026#34;index.html\u0026#34; acl = \u0026#34;public-read\u0026#34; content_type = \u0026#34;text/html\u0026#34; } # error.html resource \u0026#34;aws_s3_object\u0026#34; \u0026#34;error\u0026#34; { bucket = aws_s3_bucket.mybucket.id key = \u0026#34;error.html\u0026#34; source = \u0026#34;error.html\u0026#34; acl = \u0026#34;public-read\u0026#34; content_type = \u0026#34;text/html\u0026#34; } # main.js resource \u0026#34;aws_s3_object\u0026#34; \u0026#34;mainjs\u0026#34; { bucket = aws_s3_bucket.mybucket.id key = \u0026#34;main.js\u0026#34; source = \u0026#34;main.js\u0026#34; acl = \u0026#34;public-read\u0026#34; content_type = \u0026#34;javascript\u0026#34; } # configure the html files for website resource \u0026#34;aws_s3_bucket_website_configuration\u0026#34; \u0026#34;memesoftheday\u0026#34; { bucket = aws_s3_bucket.mybucket.id index_document { suffix = \u0026#34;index.html\u0026#34; } error_document { key = \u0026#34;error.html\u0026#34; } depends_on = [ aws_s3_bucket_acl.myacl ] } Save Terrafrom state on a remote backend S3 with state lock mechanism using Dynamo DB # backend \u0026#34;s3\u0026#34; { bucket = \u0026#34;statebucket-website\u0026#34; key = \u0026#34;terraform.tfstate\u0026#34; region = \u0026#34;eu-north-1\u0026#34; encrypt = true dynamodb_table = \u0026#34;state-lock\u0026#34; } ","date":"5 November 2023","permalink":"/projects/terraform_s3/","section":"","summary":"Deploy a static website on AWS S3 using Terraform.","title":"Static Website hosted on AWS S3 using Terraform"},{"content":"","date":"28 September 2023","permalink":"/categories/android/","section":"Categories","summary":"","title":"Android"},{"content":"","date":"28 September 2023","permalink":"/tags/arduino/","section":"Tags","summary":"","title":"Arduino"},{"content":"üó≥Ô∏è Electra Touch: Polypurpose Polling System\nWe are thrilled to share a glimpse of our current project ‚Äì a versatile polling system designed for a variety of applications, featuring cutting-edge technology integration. Here\u0026rsquo;s a concise overview:\nProgress so far: # Components: # Arduino ESP8266 Fingerprint Sensor (R307) Purpose: # Our primary objective is to create a comprehensive prototype for election scenarios.\nKey Features: # 1Ô∏è‚É£ User Registration: # Users are required to register themselves. Their registration data is securely uploaded to Firebase Database. 2Ô∏è‚É£ Android App: # An Android app has been developed. Only individuals with admin access can access and utilize the app. 3Ô∏è‚É£ Election Process: # During the election, users must verify their registration status. If registered, they can cast their votes for their preferred party. 4Ô∏è‚É£ Vote Tracking: # Vote counts are meticulously recorded in Firebase Database. 5Ô∏è‚É£ Election Results: # The final election results are dynamically displayed on the Android app. Source Code # Android App # harisheoran/Electra-Touch Kotlin 0 0 IOT # richa-m/Electra-Touch C\u0026#43;\u0026#43; 0 0 Team Members # Maaz Khan Ridhi Bansal Richa Mathur me ","date":"28 September 2023","permalink":"/projects/electratouch/","section":"","summary":"üó≥Ô∏è Electra Touch: Polypurpose Polling System","title":"Electra Touch"},{"content":"","date":"28 September 2023","permalink":"/tags/esp8266/","section":"Tags","summary":"","title":"ESP8266"},{"content":"","date":"28 September 2023","permalink":"/categories/iot/","section":"Categories","summary":"","title":"IOT"},{"content":"","date":"28 September 2023","permalink":"/tags/jetpack-compose/","section":"Tags","summary":"","title":"Jetpack Compose"},{"content":"","date":"28 September 2023","permalink":"/tags/kotlin/","section":"Tags","summary":"","title":"Kotlin"},{"content":"","date":"28 September 2023","permalink":"/tags/mvvm/","section":"Tags","summary":"","title":"MVVM"},{"content":"","date":"2 September 2023","permalink":"/categories/ai/","section":"Categories","summary":"","title":"AI"},{"content":"","date":"2 September 2023","permalink":"/categories/gpt/","section":"Categories","summary":"","title":"GPT"},{"content":"Talk to your pdfs using GPT.\nTech Stack # Python Open AI Langchain Source Code # harisheoran/PDF-Pulse Ask your PDFüìÑ anything. Python 0 0 Demo # ","date":"2 September 2023","permalink":"/projects/gptfordoc/","section":"","summary":"Talk to your pdfs using GPT.","title":"GPT for PDFs"},{"content":"","date":"2 September 2023","permalink":"/tags/langchain/","section":"Tags","summary":"","title":"Langchain"},{"content":"","date":"2 September 2023","permalink":"/tags/openai-api/","section":"Tags","summary":"","title":"Openai API"},{"content":"","date":"2 September 2023","permalink":"/tags/python/","section":"Tags","summary":"","title":"Python"},{"content":"","date":"13 August 2023","permalink":"/tags/ai/","section":"Tags","summary":"","title":"AI"},{"content":"","date":"13 August 2023","permalink":"/categories/bot/","section":"Categories","summary":"","title":"Bot"},{"content":"","date":"13 August 2023","permalink":"/tags/buildspace/","section":"Tags","summary":"","title":"Buildspace"},{"content":"","date":"13 August 2023","permalink":"/tags/gpt/","section":"Tags","summary":"","title":"GPT"},{"content":"","date":"13 August 2023","permalink":"/tags/slack-bot/","section":"Tags","summary":"","title":"Slack bot"},{"content":" Our project utilizes AI to enhance Slack, streamlining tasks and sparking creativity for seamless teamwork.\nWe (I and my friend Manish) are building this project in BuildSpace.\nWeek 2 # Week 3 # ","date":"13 August 2023","permalink":"/projects/sparrowbot/","section":"","summary":"Our project utilizes AI to enhance Slack, streamlining tasks and sparking creativity for seamless teamwork.","title":"Sparrow Bot"},{"content":" harisheoran01@gmail.com Mail me Twitter\nLinkedIn\nGithub\n","date":"12 July 2023","permalink":"/contact/","section":"","summary":"harisheoran01@gmail.","title":""},{"content":" App to browse characters, episodes and search details from Rick \u0026amp; Morty Tv show. Download app View source code on Github # harisheoran/rick-morty-collection Explore the characters of the Rick and Morty Tv show. Kotlin 1 0 Gallery # Demo # Read about its MVVM architecture here. # Tech Stack \u0026amp; Libraries # Kotlin Language MVVM Architecture Retrofit Picasso Epoxy RecyclerView Paging 3 Moshi API # The Rick and Morty API MVVM Architecture # Image caption Start from Network Layer\n1. Network Layer # 4 main components are\nService Interface It define how the app should talk to server interface RickAndMortyService { @GET(value = \u0026#34;character/\u0026#34;) suspend fun getCharactersPage(@Query(value = \u0026#34;page\u0026#34;) pageIndex: Int): Response\u0026lt;GetCharactersPageResponse\u0026gt; } Retrofit service Creates an implementation of the API endpoint defined by our interface and pass that service to our API client. object NetworkLayer { val moshi = Moshi.Builder() .add(KotlinJsonAdapterFactory()) .build() private val retrofit: Retrofit = Retrofit.Builder() .client(getLoggingHttpClient()) .baseUrl(\u0026#34;https://rickandmortyapi.com/api/\u0026#34;) .addConverterFactory(MoshiConverterFactory.create(moshi)) .build() private val rickAndMortyService: RickAndMortyService by lazy { retrofit.create(RickAndMortyService::class.java) } val apiClient = ApiClient(rickAndMortyService) } API Client\nThrough which our app will talk to server. It has the methods to talk to API and return the response inside our Network Error handling Network Error handling Class SimpleResponse\nA simple kind of wrapper class\nIt have 3 constructor as a parameter - Status, reponse from API client and exception\nIt has some properties to check weather the response is successfull or failed\n2. Repository Layer # We have 3 repository for fetching Character list( for home screen), Single Charater and Episodes.\nclass CharacterListRepository { suspend fun getCharactersPage(pageIndex: Int): GetCharactersPageResponse? { val request = NetworkLayer.apiClient.getCharactersPages(pageIndex) if (request.failed || !request.isSucceed) { return null } return request.body } } Sending request to api using Api client val request = NetworkLayer.apiClient.getCharactersPages(pageIndex) then checking the request and return accordingly.\n","date":"29 June 2023","permalink":"/projects/rickmorty/","section":"","summary":"App to browse characters, episodes and search details from Rick \u0026amp; Morty Tv show.","title":"Rick \u0026 Morty Collection App"},{"content":"","date":"15 April 2023","permalink":"/tags/cloud-firestore/","section":"Tags","summary":"","title":"Cloud Firestore"},{"content":"App to get access of study materials for college students. # Tech Stacks # Kotlin Language Android Jetpack Components Firebase Cloud Firestore Lottie Android View on Website # Download pre-alpha version # View on Github # harisheoran/collegehub App to get access of study materials for college students. Kotlin 0 0 ","date":"15 April 2023","permalink":"/projects/collegehub/","section":"","summary":"App to get access of study materials for college students.","title":"College Hub App"},{"content":"","date":"15 April 2023","permalink":"/tags/firebase/","section":"Tags","summary":"","title":"Firebase"},{"content":"","date":"30 December 2022","permalink":"/tags/java/","section":"Tags","summary":"","title":"Java"},{"content":"App to browse memes. # For bowsing meme templates from ImgFlip API.\nView on Github # Tech Stack\nKotlin Jetpack Navigation Components Retrofit for networking Coil to display images Demo # ","date":"30 December 2022","permalink":"/projects/memeit/","section":"","summary":"App to browse memes.","title":"Memeit App"},{"content":"","date":"29 October 2022","permalink":"/tags/bootstrap/","section":"Tags","summary":"","title":"Bootstrap"},{"content":"","date":"29 October 2022","permalink":"/tags/cloudflare/","section":"Tags","summary":"","title":"Cloudflare"},{"content":"","date":"29 October 2022","permalink":"/tags/express-js/","section":"Tags","summary":"","title":"Express JS"},{"content":"","date":"29 October 2022","permalink":"/tags/mongodb/","section":"Tags","summary":"","title":"MongoDB"},{"content":"","date":"29 October 2022","permalink":"/tags/nodejs/","section":"Tags","summary":"","title":"NodeJs"},{"content":"","date":"29 October 2022","permalink":"/categories/web/","section":"Categories","summary":"","title":"Web"},{"content":" Programmer Server # A place for programmers to discuss, share thier ideas and make connections.\nView on Github\nMemes of the day # Browse top memes of the day\nView on Website\nWeb Mini Projects # Weather Application Random Color Generator Pokemon Generator Weight Convertor View on Website\n","date":"29 October 2022","permalink":"/projects/webprojects/","section":"","summary":"Programmer Server # A place for programmers to discuss, share thier ideas and make connections.","title":"Web Projects"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]